<templateSet group="XX">
  <template name="xx-typeHandles" value="package com.xx.gtp.order.api.handler;&#10;&#10;import com.baomidou.mybatisplus.extension.handlers.AbstractJsonTypeHandler;&#10;import com.fasterxml.jackson.core.JsonProcessingException;&#10;import com.fasterxml.jackson.core.type.TypeReference;&#10;import com.fasterxml.jackson.databind.DeserializationFeature;&#10;import com.fasterxml.jackson.databind.ObjectMapper;&#10;import com.xx.gtp.order.api.pojo.entity.OrderGroupEntity.GuideInfo;&#10;import org.apache.ibatis.type.JdbcType;&#10;import org.apache.ibatis.type.MappedJdbcTypes;&#10;import org.apache.ibatis.type.MappedTypes;&#10;&#10;import java.io.IOException;&#10;import java.util.List;&#10;&#10;/**&#10; * @Description: 导游信息类型处理器&#10; * @Author yews&#10; * @Date: $date$ $time$ &#10; */&#10;@MappedTypes({Object.class})&#10;@MappedJdbcTypes({JdbcType.VARCHAR})&#10;public class GuideInfoTypeHandler extends AbstractJsonTypeHandler&lt;Object&gt; {&#10;&#10;&#9;private static ObjectMapper OBJECT_MAPPER;&#10;&#10;&#9;protected Object parse(String json) {&#10;&#9;&#9;try {&#10;&#9;&#9;&#9;return getObjectMapper().readValue(json, new TypeReference&lt;List&lt;GuideInfo&gt;&gt;() {&#10;&#9;&#9;&#9;});&#10;&#9;&#9;} catch (IOException var3) {&#10;&#9;&#9;&#9;throw new RuntimeException(var3);&#10;&#9;&#9;}&#10;&#9;}&#10;&#10;&#9;protected String toJson(Object obj) {&#10;&#9;&#9;try {&#10;&#9;&#9;&#9;return getObjectMapper().writeValueAsString(obj);&#10;&#9;&#9;} catch (JsonProcessingException var3) {&#10;&#9;&#9;&#9;throw new RuntimeException(var3);&#10;&#9;&#9;}&#10;&#9;}&#10;&#10;&#9;public static ObjectMapper getObjectMapper() {&#10;&#9;&#9;if (null == OBJECT_MAPPER) {&#10;&#9;&#9;&#9;OBJECT_MAPPER = new ObjectMapper();&#10;&#9;&#9;}&#10;&#9;&#9;OBJECT_MAPPER.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);&#10;&#9;&#9;return OBJECT_MAPPER;&#10;&#9;}&#10;}&#10;" description="MyBatisPlus实体自定义集合类型处理器" toReformat="false" toShortenFQNames="true">
    <variable name="date" expression="" defaultValue="date()" alwaysStopAt="true" />
    <variable name="time" expression="" defaultValue="time()" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="xx-typeHandle" value="package com.xx.gtp.order.api.handler;&#10;&#10;import com.xx.core.tool.jackson.JsonUtil;&#10;import com.xx.gtp.order.api.pojo.entity.OrderGroupEntity;&#10;import org.apache.ibatis.type.BaseTypeHandler;&#10;import org.apache.ibatis.type.JdbcType;&#10;import org.apache.ibatis.type.MappedJdbcTypes;&#10;import org.apache.ibatis.type.MappedTypes;&#10;&#10;import java.sql.CallableStatement;&#10;import java.sql.PreparedStatement;&#10;import java.sql.ResultSet;&#10;import java.sql.SQLException;&#10;&#10;/**&#10; * @Description: 订单扩展参数类型处理器 &#10; * @Author yews&#10; * @Date: $date$ $time$ &#10; */&#10;@MappedJdbcTypes(JdbcType.VARCHAR)&#10;@MappedTypes(OrderGroupEntity.Payload.class)&#10;public class OrderGroupPayloadTypeHandler extends BaseTypeHandler&lt;OrderGroupEntity.Payload&gt; {&#10;&#10;    @Override&#10;    public void setNonNullParameter(PreparedStatement preparedStatement, int i, OrderGroupEntity.Payload o,&#10;        JdbcType jdbcType) throws SQLException {&#10;        preparedStatement.setString(i, JsonUtil.toJson(o));&#10;    }&#10;&#10;    @Override&#10;    public OrderGroupEntity.Payload getNullableResult(ResultSet resultSet, String s) throws SQLException {&#10;        if (resultSet.getString(s) == null) {&#10;            return OrderGroupEntity.Payload.builder().build();&#10;        }&#10;        return JsonUtil.parse(resultSet.getString(s), OrderGroupEntity.Payload.class);&#10;    }&#10;&#10;    @Override&#10;    public OrderGroupEntity.Payload getNullableResult(ResultSet resultSet, int i) throws SQLException {&#10;        if (resultSet.getString(i) == null) {&#10;            return OrderGroupEntity.Payload.builder().build();&#10;        }&#10;        return JsonUtil.parse(resultSet.getString(i), OrderGroupEntity.Payload.class);&#10;    }&#10;&#10;    @Override&#10;    public OrderGroupEntity.Payload getNullableResult(CallableStatement callableStatement, int i)&#10;        throws SQLException {&#10;        if (callableStatement.getString(i) == null) {&#10;            return OrderGroupEntity.Payload.builder().build();&#10;        }&#10;        return JsonUtil.parse(callableStatement.getString(i), OrderGroupEntity.Payload.class);&#10;    }&#10;}&#10;" description="MyBatisPlus实体自定义类型处理器" toReformat="false" toShortenFQNames="true">
    <variable name="date" expression="" defaultValue="date()" alwaysStopAt="true" />
    <variable name="time" expression="" defaultValue="time()" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="xx-payload" value="/**&#10; * @description: 扩展数据&#10; * @author yews&#10; * @date: $date$ $time$&#10; */&#10;@Builder&#10;@Data&#10;public static class Payload implements Serializable {&#10;    //serialVersionUID&#10;} " description="扩展数据实体类" toReformat="false" toShortenFQNames="true">
    <variable name="date" expression="" defaultValue="date()" alwaysStopAt="true" />
    <variable name="time" expression="" defaultValue="time()" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="xx-query-mapper" value="IPage&lt;OrderInfo&gt; getOrderInfoByReq(Page&lt;OrderInfo&gt; page, @Param(&quot;od&quot;) OrderListReq req);" description="mapper类查询" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="xx-query-service" value="&#10;Integer sid = SecureUtil.getUserSid();//当前登录用户ID&#10;req.setSid(sid);&#10;&#10;//下单截止日期，加上时分秒&#10;String endCreateDate = req.getEndCreateDate();&#10;if (Func.isNotEmpty(endCreateDate)) {&#10;    req.setEndCreateDate(endCreateDate + &quot; 23:59:59&quot;);&#10;}&#10;&#10;//查询主单信息&#10;Page&lt;OrderInfo&gt; page = new Page&lt;&gt;(req.getPageNum(), req.getPageSize(), true);&#10;IPage&lt;OrderInfo&gt; orderPages = orderMapper.getOrderInfoByReq(page, req);&#10;List&lt;OrderInfo&gt; orderInfos = orderPages.getRecords();//查询的订单信息&#10;if (Func.isEmpty(orderInfos)) {&#10;    return new Page&lt;&gt;();&#10;}&#10;&#10;//主单赋值对应子订单集合&#10;List&lt;OrderListVO&gt; retOrders = new ArrayList&lt;&gt;();//返回对象集合&#10;for (OrderInfo orderInfo : orderInfos) {&#10;    OrderListVO retVO = BeanUtil.toBean(orderInfo, OrderListVO.class);&#10;    retOrders.add(retVO);&#10;}&#10;&#10;//转成返回对象&#10;IPage&lt;OrderListVO&gt; orderRetPage = new Page&lt;&gt;();&#10;BeanUtil.copyProperties(orderPages, orderRetPage);&#10;orderRetPage.setRecords(retOrders);&#10;return orderRetPage;&#10;" description="查询service" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="xx-mybatis-in" value="t.order_id IN&#10;&lt;foreach close=&quot;)&quot; collection=&quot;$ids$&quot; index=&quot;index&quot; item=&quot;item&quot; open=&quot;(&quot; separator=&quot;,&quot;&gt;&#10;    #{item}&#10;&lt;/foreach&gt;" description="in遍历查询" toReformat="false" toShortenFQNames="true">
    <variable name="ids" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="SQL" value="true" />
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="xx-mybatis-if" value="&lt;if test=&quot;$fieldName$ != null and $fieldName$.trim() != ''&quot;&gt;&#10;  AND $fieldName1$ = #{$fieldName$}&#10;&lt;/if&gt;" description="if判断" toReformat="false" toShortenFQNames="true">
    <variable name="fieldName" expression="clipboard()" defaultValue="" alwaysStopAt="true" />
    <variable name="fieldName1" expression="snakeCase(fieldName)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="SQL" value="true" />
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="xx-enum" value="import com.baomidou.mybatisplus.annotation.EnumValue;&#10;import com.fasterxml.jackson.annotation.JsonValue;&#10;import lombok.AllArgsConstructor;&#10;import lombok.Getter;&#10;&#10;/**&#10; * @Description: &#10; * @Author yews&#10; * @Date: $date$ $time$ &#10; */&#10;@Getter&#10;@AllArgsConstructor&#10;public enum $className$ {&#10;&#10;    XX(&quot;xx&quot;, &quot;desc&quot;);&#10;&#10;    @EnumValue&#10;    @JsonValue&#10;    private final String value;&#10;&#10;    private final String name;&#10;&#10;    @Override&#10;    public String toString() {&#10;        return this.name;&#10;    }&#10;}&#10;" description="枚举类" toReformat="false" toShortenFQNames="true">
    <variable name="date" expression="" defaultValue="date()" alwaysStopAt="true" />
    <variable name="time" expression="" defaultValue="time()" alwaysStopAt="true" />
    <variable name="className" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
</templateSet>